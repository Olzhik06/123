syntax = "proto3";

package order;

option go_package = "order_service/proto;proto";

message Order {
  string id = 1;
  string user_id = 2;
  repeated string item_ids = 3;
  double total_price = 4;
  string status = 5;
  string created_at = 6;
}

message CreateOrderRequest {
  string user_id = 1;
  repeated string item_ids = 2;
}

message CreateOrderResponse {
  string id = 1;
}

message GetOrderRequest {
  string id = 1;
}

message GetOrderResponse {
  Order order = 1;
}

message UpdateOrderRequest {
  string id = 1;
  string user_id = 2;
  repeated string item_ids = 3;
  double total_price = 4;
  string status = 5;
}

message UpdateOrderResponse {
  string message = 1;
}
message PatchOrderStatusRequest {
  string id = 1;
  string status = 2;
}

message PatchOrderStatusResponse {
  string message = 1;
}
message DeleteOrderRequest {
  string id = 1;
}

message DeleteOrderResponse {
  string message = 1;
}

message ListOrdersRequest {
  int64 limit = 1;
  int64 skip = 2;
}

message ListOrdersResponse {
  repeated Order orders = 1;
}
message ListOrdersByUserRequest {
  string user_id = 1;
  int64 limit = 2;
  int64 skip = 3;
}

message ListOrdersByUserResponse {
  repeated Order orders = 1;
}
service OrderService {
  rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse);
  rpc GetOrder(GetOrderRequest) returns (GetOrderResponse);
  rpc UpdateOrder(UpdateOrderRequest) returns (UpdateOrderResponse);
  rpc DeleteOrder(DeleteOrderRequest) returns (DeleteOrderResponse);
  rpc ListOrders(ListOrdersRequest) returns (ListOrdersResponse);
  rpc PatchOrderStatus(PatchOrderStatusRequest) returns (PatchOrderStatusResponse);
  rpc ListOrdersByUser(ListOrdersByUserRequest) returns (ListOrdersByUserResponse);
}
